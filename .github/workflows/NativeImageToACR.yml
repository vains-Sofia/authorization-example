# 工作流名称
name: Package Native Docker Image and push to alibaba ACR

on:
  # master分支PR时
  pull_request:
    branches:
      - master
  # 手动触发任务
  workflow_dispatch:

env:
  # 仓库地址
  REGISTRY: registry.cn-guangzhou.aliyuncs.com
  IMAGE_NAME: authorization-server
  IMAGE_TAG: latest
  USERNAME: ${{ secrets.USERNAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  RUN_NUMBER: ${{ github.run_number }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # 将远程仓库中的源代码领取到workfile自动化构建脚本运行的服务器
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      # 用于登录docker以便我们后续上传镜像到自己的镜像仓库
      - name: login to ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      # 生成和推送镜像  阿里云镜像仓库推送有问题
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push # 构建docker镜像，推送到自己的docker镜像仓库
      #   uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ secrets.USERMAME }} # 镜像仓库用户名
      #     password: ${{ secrets.PASSWORD }} # 镜像仓库密码
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}.${{ github.run_id }}.${{ github.run_number }} #动态变量镜像TAG 使用github运行job和jobid设置tag
      #     context: . # 相对以远程仓库根路径的dockerfile的路径
      #     file: ./NetByDocker/Dockerfile # 指定Dockerfile
      - name: Set Jdk21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'maven'

      - name: Show version
        run:
          java -version

      # 登录阿里云镜像仓库
      - name: Login Alibaba ACR
        run:
          echo "${{ env.PASSWORD }}" | docker login --username=${{ env.USERNAME }} --password-stdin ${{ env.REGISTRY }}

      # 使用Dockerfile构建镜像  ${{env.IMAGE_TAG}}.${{ github.run_id }}.${{ github.run_number }}
      - name: Build the Docker image
        run:
          cd authorization-server && mvn -DskipTests -Pnative spring-boot:build-image

      # 推送镜像到镜像仓库
      - name: Push to ACR
        run:
          docker push authorization-server:0.0.1-SNAPSHOT

      # 列出所有镜像
      - name: Docker Images Lst
        run: docker images